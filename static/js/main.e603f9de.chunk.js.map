{"version":3,"sources":["components/Header.js","components/Type.js","components/Card.js","components/panel-components/PanelContent.js","components/panel-components/PanelHeader.js","components/Panel.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Type","types","map","obj","i","type","name","Card","props","getColor","info","colors","find","color","setData","promise","a","then","pokemon","setState","data","id","sprite","sprites","other","dream_world","front_default","imgUrl","state","this","putInfoPokemon","onClick","style","backgroundColor","alt","src","Component","PanelContente","aboutHandler","about","species","weight","height","abilities","active","moves","base","baseHandler","movesHandler","getAbout","ability","join","putContent","getBase","getMoves","console","log","PanelHeader","returnHandler","Panel","json","setPokemon","pokePromise","getPanel","Main","getPokemons","results","fetch","url","mode","response","pokemons","getData","page","list","isLoading","length","display","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"osBAWeA,EARA,WACb,OACE,wBAAQC,UAAU,SAAlB,SACE,oBAAIA,UAAU,OAAd,wB,kECOSC,EAXF,SAAC,GAAc,IAAZC,EAAW,EAAXA,MACd,OACE,qBAAKF,UAAU,QAAf,SACIE,EACEA,EAAMC,KAAI,SAACC,EAAKC,GAAN,OAAW,sBAAcL,UAAU,OAAxB,SAAgCI,EAAIE,KAAKC,MAA9BF,MACjC,QCHYG,E,kDACnB,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAYRC,SAAW,SAACJ,GAGV,OAFeK,EAAKC,OACCC,MAAK,SAACC,GAAD,OAAWA,EAAMR,OAf3B,EAmBlBS,QAnBkB,uCAmBR,WAAOC,GAAP,SAAAC,EAAA,sDACRD,EAAQE,MAAK,SAACC,GACZ,EAAKC,SAAS,CACZC,KAAMF,EACNjB,MAAOiB,EAAQjB,MACfoB,GAAIH,EAAQG,GACZf,KAAMY,EAAQZ,OAEhB,IAAMD,EAAOa,EAAQjB,MAAM,GAAGI,KAAKC,KAC7BO,EAAQ,EAAKJ,SAASJ,GAAMA,GAC5BiB,EAASJ,EAAQK,QAAQC,MAAMC,YAAYC,cAEjD,EAAKP,SAAS,CACZN,QACAc,OAAQL,OAdJ,2CAnBQ,sDAGhB,EAAKM,MAAQ,CACXtB,KAAM,GACNc,KAAM,GACNnB,MAAO,GACPY,MAAO,GACPc,OAAQ,GACRN,GAAI,IATU,E,qDAsClB,WAAoB,IACVN,EAAYc,KAAKrB,MAAjBO,QACJc,KAAKD,MAAMR,MAAMS,KAAKf,QAAQC,K,oBAGpC,WAAS,IAAD,EACqCc,KAAKD,MAAxCf,EADF,EACEA,MAAOQ,EADT,EACSA,GAAIM,EADb,EACaA,OAAQ1B,EADrB,EACqBA,MAAOK,EAD5B,EAC4BA,KAD5B,EAE8BuB,KAAKrB,MAAjCsB,EAFF,EAEEA,eAAgBf,EAFlB,EAEkBA,QACxB,OACE,sBACEgB,QAAS,WAAKD,EAAef,IAC7BhB,UAAU,OACViC,MAAO,CAACC,gBAAiBpB,GAH3B,UAKE,oBAAId,UAAU,OAAd,SAAsBO,IACtB,qBAAIP,UAAU,KAAd,cAAsBsB,EAAK,GAAI,KAAMA,EAAK,IAAK,IAAI,GAAIA,KACvD,cAAC,EAAD,CAAMpB,MAAOA,IACb,qBAAKF,UAAU,SAASmC,IAAK5B,EAAM6B,IAAKR,W,GAxDdS,aCFbC,G,8DAEnB,WAAY7B,GAAQ,IAAD,uBACjB,cAAMA,IAkBR8B,aAAe,WAAM,IAAD,EAC6B,EAAK9B,MAAMU,QACpDqB,EAAQ,CACZC,QAHgB,EACVA,QAGNC,OAJgB,EACDA,OAIfC,OALgB,EACOA,OAKvBC,UANgB,EACeA,WAOjC,EAAKxB,SAAS,CACZyB,OAAQ,EAAC,GAAM,GAAO,GACtBL,QACAM,MAAO,GACPC,KAAM,MA/BS,EAmCnBC,YAAc,WACZ,EAAK5B,SAAS,CACZyB,OAAQ,EAAC,GAAO,GAAM,GACtBL,MAAO,GACPM,MAAO,GACPC,KAAM,MAxCS,EA4CnBE,aAAe,WACb,EAAK7B,SAAS,CACZyB,OAAQ,EAAC,GAAO,GAAO,GACvBL,MAAO,GACPM,MAAO,GACPC,KAAM,MAjDS,EAqDnBG,SAAW,WAAM,IACPV,EAAU,EAAKX,MAAfW,MACR,OACE,sBAAKxC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,QAAb,sBACA,mBAAGA,UAAU,OAAb,SAAqBwC,EAAMC,QAAQlC,UAErC,sBAAKP,UAAU,cAAf,UACE,mBAAGA,UAAU,QAAb,qBACA,oBAAGA,UAAU,OAAb,UAAqBwC,EAAMG,OAAO,GAAlC,WAEF,sBAAK3C,UAAU,cAAf,UACE,mBAAGA,UAAU,QAAb,qBACA,oBAAGA,UAAU,OAAb,UAAqBwC,EAAME,OAAO,GAAlC,YAEF,sBAAK1C,UAAU,cAAf,UACE,mBAAGA,UAAU,QAAb,wBACA,oBAAGA,UAAU,OAAb,eAAuBwC,EAAMI,UAAUzC,KAAI,SAACgD,GAAD,OAAYA,EAAQA,QAAQ5C,QAAM6C,KAAK,MAAlF,eAvEW,EA6EnBC,WAAa,WAAM,IAAD,EACe,EAAKxB,MAA5BW,EADQ,EACRA,MAAOO,EADC,EACDA,KAAMD,EADL,EACKA,MAErB,OAAGN,EAAc,EAAKU,WACdH,EAAa,EAAKO,UAClBR,EAAc,EAAKS,WACpB,MAnFU,MAG8B,EAAK9C,MAAMU,QACpDqB,EAAQ,CACZC,QALe,EAGTA,QAGNC,OANe,EAGAA,OAIfC,OAPe,EAGQA,OAKvBC,UARe,EAGgBA,WAHhB,OAWjB,EAAKf,MAAQ,CACXW,QACAO,KAAM,GACND,MAAO,GACPD,OAAQ,EAAC,GAAM,GAAO,IAfP,E,qDAsFnB,WACEW,QAAQC,IAAI3B,KAAKrB,MAAMU,W,oBAGzB,WAAU,IACA0B,EAAWf,KAAKD,MAAhBgB,OACR,OACE,sBAAK7C,UAAU,gBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,wBACEA,UAAS,oBAAgB6C,EAAO,GAAK,SAAU,IAC/Cb,QAASF,KAAKS,aAFhB,mBAMA,wBACEvC,UAAS,mBAAe6C,EAAO,GAAI,SAAU,IAC7Cb,QAASF,KAAKkB,YAFhB,wBAMA,wBACEhD,UAAS,oBAAgB6C,EAAO,GAAK,SAAU,IAC/Cb,QAASF,KAAKmB,aAFhB,sBAODnB,KAAKuB,oB,GApH6BhB,cCqB5BqB,EApBK,SAACjD,GAAU,IACrBU,EAA2BV,EAA3BU,QAASwC,EAAkBlD,EAAlBkD,cACXrC,EAAKH,EAAQG,GAEnB,OACE,sBAAKtB,UAAU,iBAAf,UACE,wBAAQA,UAAU,SAASgC,QAAS2B,EAApC,SACE,mBAAG3D,UAAU,wBAEf,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BmB,EAAQZ,OACpC,cAAC,EAAD,CAAML,MAAOiB,EAAQjB,WAEvB,qBAAIF,UAAU,KAAd,cAAsBsB,EAAK,GAAI,KAAMA,EAAK,IAAK,IAAI,GAAIA,YCX1CsC,E,kDAEnB,WAAYnD,GAAO,IAAD,8BAChB,cAAMA,IAQRC,SAAW,SAACJ,GAEV,OADauD,EAAKjD,OAAOC,MAAK,SAACC,GAAD,OAAWA,EAAMR,MACnCA,IAXI,EAclBwD,WAdkB,sBAcL,sBAAA7C,EAAA,sDACa,EAAKR,MAArBsD,YACI7C,MAAK,SAACC,GAChB,IAAMb,EAAOa,EAAQjB,MAAM,GAAGI,KAAKC,KAC7BO,EAAQ,EAAKJ,SAASJ,GAC5B,EAAKc,SAAS,CACZD,UACAL,MAAOA,OAPA,2CAdK,EA0BlBkD,SAAW,WAAM,IACP7C,EAAY,EAAKU,MAAjBV,QACAwC,EAAkB,EAAKlD,MAAvBkD,cACR,OACE,sBAAK3D,UAAU,YAAf,UACE,cAAC,EAAD,CAAamB,QAASA,EAASwC,cAAeA,IAC9C,qBACExB,IAAKhB,EAAQZ,KACbP,UAAU,eACVoC,IAAKjB,EAAQK,QAAQC,MAAMC,YAAYC,gBAEzC,cAAC,EAAD,CAAeR,QAASA,QAlC5B,EAAKU,MAAQ,CACXV,QAAS,GACTL,MAAO,IALO,E,qDA0ClB,WACMgB,KAAKD,MAAMV,SAASW,KAAKgC,e,oBAG/B,WAEE,OACE,yBAAS9D,UAAU,QAAQiC,MAAO,CAACC,gBAA0BJ,KAAKD,MAAMf,OAAxE,SACIgB,KAAKD,MAAMV,SAAYW,KAAKkC,iB,GApDH3B,aCDd4B,E,kDACnB,WAAYxD,GAAO,IAAD,8BAChB,cAAMA,IASRkD,cAAgB,WACd,EAAKvC,SAAS,CACZD,QAAS,MAZK,EAgBlBY,eAAiB,SAACf,GAChB,EAAKI,SAAS,CACZD,QAASH,KAlBK,EAsBlBkD,YAtBkB,uCAsBJ,WAAO7C,GAAP,eAAAJ,EAAA,sEACWI,EAAK8C,QAAQhE,IAAb,uCAAiB,WAAOC,GAAP,iBAAAa,EAAA,sEACfmD,MAAMhE,EAAIiE,IAAK,CAACC,KAAM,SADP,cAChCC,EADgC,gBAEhBA,EAASV,OAFO,cAEhC1C,EAFgC,yBAG/BA,GAH+B,2CAAjB,uDADX,cACNqD,EADM,yBAMLA,GANK,2CAtBI,wDA+BlBC,QA/BkB,uCA+BR,WAAOC,GAAP,mBAAAzD,EAAA,sEACemD,MAAM,4CAAD,OAA6C,IAA7C,WAA2DM,GAAQ,CAACJ,KAAM,SAD9F,cACFC,EADE,gBAEWA,EAASV,OAFpB,cAEFxC,EAFE,gBAGe,EAAK6C,YAAY7C,GAHhC,OAGFmD,EAHE,OAIR,EAAKpD,SAAS,CACZuD,KAAK,YAAKH,GACVI,WAAY,EAAK/C,MAAM+C,YANjB,4CA/BQ,sDAGhB,EAAK/C,MAAQ,CACX8C,KAAM,GACNC,WAAW,EACXzD,QAAS,IANK,E,qDAyClB,WACKW,KAAKD,MAAM8C,KAAKE,QAAU,GAAG/C,KAAK2C,Y,oBAGvC,WAAU,IAAD,SAC8B3C,KAAKD,MAAlC8C,EADD,EACCA,KAAMC,EADP,EACOA,UAAWzD,EADlB,EACkBA,QACzB,OACE,uBAAMnB,UAAS,eAAWmB,EAAU,WAAY,IAAhD,UACE,qBAAKnB,UAAU,UAAUiC,MAAQ2C,EAAW,CAACE,QAAS,SAAS,CAACA,QAAS,UACtE3D,EAMC,cAAC,EAAD,CAAO4C,YAAa5C,EAASwC,cAAe7B,KAAK6B,gBALjDgB,EAAKxE,KAAI,SAACa,EAASX,GAAV,OAAe,cAAC,EAAD,CACtB0B,eAAgB,EAAKA,eAErBf,QAASA,GADJX,a,GAtDegC,aCSnB0C,MAVf,WAEE,OACE,sBAAK/E,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSgF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhE,MAAK,YAAkD,IAA/CiE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e603f9de.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/headerStyles.css';\n\nconst Header = ()=> {\n  return(\n    <header className=\"header\">\n      <h1 className=\"logo\">Pokedex</h1>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nconst Type = ({ types })=> {\n  return(\n    <div className=\"types\">\n      {(types)\n        ? types.map((obj, i)=> <span key={i} className=\"type\">{obj.type.name}</span>)\n        :null\n      }\n    </div>\n  );\n}\n\nexport default Type;","import React, { Component } from 'react';\nimport info from '../assets/colors.json';\nimport Type from './Type';\n\nexport default class Card extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      name: '',\n      data: '',\n      types: '',\n      color: '',\n      imgUrl: '',\n      id: '',\n    }\n  }\n\n  getColor = (type)=> {\n    const colors = info.colors;\n    const color = colors.find((color)=> (color[type]));\n    return color;\n  }\n\n  setData = async (promise)=> {\n    promise.then((pokemon)=>{\n      this.setState({\n        data: pokemon,\n        types: pokemon.types,\n        id: pokemon.id,\n        name: pokemon.name,\n      });\n      const type = pokemon.types[0].type.name;\n      const color = this.getColor(type)[type];\n      const sprite = pokemon.sprites.other.dream_world.front_default;\n\n      this.setState({\n        color,\n        imgUrl: sprite\n      });\n    });\n  }\n\n  componentDidMount(){\n    const { promise } = this.props; \n    if(!this.state.data) this.setData(promise);\n  }\n\n  render(){\n    const { color, id, imgUrl, types, name } = this.state;\n    const { putInfoPokemon, promise } = this.props;\n    return (\n      <div\n        onClick={()=>{putInfoPokemon(promise)}}\n        className=\"card\"\n        style={{backgroundColor: color}}\n      >\n        <h2 className=\"name\">{name}</h2>\n        <h3 className=\"id\">#{(id < 10)?'00':(id < 100)?'0':''}{id}</h3>\n        <Type types={types} />\n        <img className=\"sprite\" alt={name} src={imgUrl}></img>\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class PanelContente extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const { species, weight, height, abilities } = this.props.pokemon;\n    const about = {\n      species,\n      weight,\n      height,\n      abilities\n    };\n\n    this.state = {\n      about,\n      base: '',\n      moves: '',\n      active: [true, false, false]\n    }\n  }\n\n  aboutHandler = ()=> {\n    const { species, weight, height, abilities } = this.props.pokemon;\n    const about = {\n      species,\n      weight,\n      height,\n      abilities\n    };\n    this.setState({\n      active: [true, false, false],\n      about,\n      moves: '',\n      base: '',\n    });\n  }\n\n  baseHandler = ()=> {\n    this.setState({\n      active: [false, true, false],\n      about: '',\n      moves: '',\n      base: '',\n    });\n  }\n  \n  movesHandler = ()=> {\n    this.setState({\n      active: [false, false, true],\n      about: '',\n      moves: '',\n      base: '',\n    });\n  }\n\n  getAbout = ()=> {\n    const { about } = this.state;\n    return (\n      <div className=\"content\">\n        <div className=\"content-box\">\n          <p className=\"title\">Species:</p>\n          <p className=\"text\">{about.species.name}</p>\n        </div>\n        <div className=\"content-box\">\n          <p className=\"title\">Height:</p>\n          <p className=\"text\">{about.height/10} m</p>\n        </div>\n        <div className=\"content-box\">\n          <p className=\"title\">Weight:</p>\n          <p className=\"text\">{about.weight/10} Kg</p>\n        </div>\n        <div className=\"content-box\">\n          <p className=\"title\">Abilities:</p>\n          <p className=\"text\">[ {about.abilities.map((ability)=> ability.ability.name).join(', ')} ]</p>\n        </div>\n      </div>\n    );\n  }\n\n  putContent = ()=> {\n    const { about, base, moves } = this.state;\n\n    if(about) return this.getAbout();\n    else if(base) return this.getBase();\n    else if(moves) return this.getMoves();\n    return null;\n  }\n\n  componentDidMount() {\n    console.log(this.props.pokemon);\n  }\n\n  render() {\n    const { active } = this.state;\n    return (\n      <div className=\"panel-content\">\n        <div className=\"labels\">\n          <button\n            className={`about-btn ${(active[0])? 'active': ''}`}\n            onClick={this.aboutHandler}\n          >\n            About\n          </button>\n          <button\n            className={`base-btn ${(active[1]? 'active': '')}`}\n            onClick={this.baseHandler}\n          >\n            Base Stats\n          </button>\n          <button\n            className={`moves-btn ${(active[2])? 'active': ''}`}\n            onClick={this.movesHandler}\n          >\n            Moves\n          </button>\n        </div>\n        {this.putContent()}\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport Type from '../Type';\n\nconst PanelHeader = (props)=> {\n  const { pokemon, returnHandler } = props;\n  const id = pokemon.id;\n\n  return (\n    <div className=\"header-content\">\n      <button className=\"return\" onClick={returnHandler}>\n        <i className=\"fas fa-arrow-left\"></i>\n      </button>\n      <div className=\"box\">\n        <div className=\"small-box\">\n          <h2 className=\"large-name\">{pokemon.name}</h2>\n          <Type types={pokemon.types} />\n        </div>\n        <h3 className=\"id\">#{(id < 10)?'00':(id < 100)?'0':''}{id}</h3>\n      </div>\n    </div>\n  );\n}\n\nexport default PanelHeader;","import React, { Component } from 'react';\nimport json from '../assets/colors.json';\nimport '../styles/statusStyles.css';\nimport PanelContente from './panel-components/PanelContent';\nimport PanelHeader from './panel-components/PanelHeader';\n\nexport default class Panel extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      pokemon: '',\n      color: '',\n    }\n  }\n\n  getColor = (type)=> {\n    const data = json.colors.find((color)=> (color[type]));\n    return data[type];\n  }\n\n  setPokemon = async ()=> {\n    const { pokePromise } = this.props;\n    pokePromise.then((pokemon)=> {\n      const type = pokemon.types[0].type.name;\n      const color = this.getColor(type);\n      this.setState({\n        pokemon,\n        color: color,\n      })\n    });\n  }\n\n  getPanel = ()=> {\n    const { pokemon } = this.state;\n    const { returnHandler } = this.props;\n    return (\n      <div className=\"container\">\n        <PanelHeader pokemon={pokemon} returnHandler={returnHandler}/>\n        <img\n          alt={pokemon.name}\n          className=\"large-sprite\" \n          src={pokemon.sprites.other.dream_world.front_default} \n        />\n        <PanelContente pokemon={pokemon} />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    if(!this.state.pokemon) this.setPokemon();\n  }\n\n  render() {\n    \n    return (\n      <section className=\"panel\" style={{backgroundColor: true && (this.state.color)}}>\n        {(this.state.pokemon) && this.getPanel()}\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Card from './Card';\nimport '../styles/mainStyles.css';\nimport Panel from './Panel';\n\nexport default class Main extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      list: [],\n      isLoading: true,\n      pokemon: ''\n    }\n  }\n\n  returnHandler = ()=> {\n    this.setState({\n      pokemon: '',\n    });\n  }\n\n  putInfoPokemon = (promise)=> {\n    this.setState({\n      pokemon: promise,\n    });\n  }\n\n  getPokemons = async (data)=> {\n    const pokemons = await data.results.map(async (obj)=>{\n      const response = await fetch(obj.url, {mode: 'cors'});\n      const pokemon = await response.json();\n      return pokemon;\n    });\n    return pokemons;\n  }\n\n  getData = async (page)=> {\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${151}&offset=${page}`, {mode: 'cors'});\n    const data = await response.json();\n    const pokemons = await this.getPokemons(data);\n    this.setState({\n      list: [...pokemons],\n      isLoading: !this.state.isLoading\n    });\n  }\n\n  componentDidMount(){\n    if(this.state.list.length <= 0) this.getData();\n  }\n\n  render() {\n    const { list, isLoading, pokemon } = this.state;\n    return(\n      <main className={`main ${(pokemon)? 'not-grid': ''}`}>\n        <div className=\"loading\" style={(isLoading)?{display: 'block'}:{display: 'none'}}></div>\n        {(!pokemon)\n          ? list.map((promise, i)=> <Card\n              putInfoPokemon={this.putInfoPokemon}\n              key={i}\n              promise={promise}\n            />)\n          : <Panel pokePromise={pokemon} returnHandler={this.returnHandler}/>\n        }\n      </main>\n    );\n  }\n}","import './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}